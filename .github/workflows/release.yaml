name: Release
on:
  push:
    tags:
      # Only run for version tags
    - 'v*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run:
        gh release create --draft "$GITHUB_REF_NAME" -F CHANGELOG.md

  build_and_upload_release_binary:
    name: Build and upload release binary
    needs: create_release
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust tools
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-udeps,cargo-deny,cargo-all-features

    - name: Lint and test
      run: make ci

    - name: Build release binary
      run: make build-release

    - name: Upload binary to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -Eeuxo pipefail
        make build-release

        case "${{ matrix.os }}" in
          ubuntu-latest)
            export ARCH="linux-x86"
            ;;

          windows-latest)
            export ARCH="windows-x86"
            ;;

          macos-latest)
            export ARCH="apple-aarch"
            ;;

          *)
            echo "Unknown OS"
            exit 1
            ;;
        esac

        mkdir -p "release/$ARCH"
        mv "target/release/prom-write" "release/$ARCH/prom-write"

        gh release list
        gh release upload "$GITHUB_REF_NAME" "release/$ARCH"

  finalize_release:
    name: Finalize release
    needs: build_and_upload_release_binary
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Finalize release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run:
        gh release edit "$GITHUB_REF_NAME" --draft=false
